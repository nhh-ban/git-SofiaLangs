raw_file <- readLines("http://www.sao.ru/lv/lvgdb/article/suites_dw_Table1.txt")
raw_file <- readLines(con="/Users/sofialangs/Documents/GitHub/git-SofiaLangs/suites_dw_Table1.txt")
raw_file <- readLines("http://www.sao.ru/lv/lvgdb/article/suites_dw_Table1.txt")
# What do you need to replace the two question marks with in order to extract
# the first two letters?
substr(x = raw_file, start = ?, stop = ?)
# The next step is then to find out *which* line starts with "--", and pick out
# the first one. This can be done in a nice little pipe, where you have to fill
# out the question marks and the missing function names:
L <-
(substr(x = raw_file, start = ?, stop = ?) == "?") %>%
raw_file
substr(x = raw_file, start = 1, stop = 2)
L <-
(substr(x = raw_file, start = 1, stop = 2) == "--") %>%
function_that_returns_the_index_of_all_TRUES %>%
function_that_picks_out_the_minimum_value
library(tidyverse)    # Contains most of what we need.
L <-
(substr(x = raw_file, start = 1, stop = 2) == "--") %>%
function_that_returns_the_index_of_all_TRUES %>%
function_that_picks_out_the_minimum_value
substr(x = raw_file, start = 1, stop = 2)
L <-
(substr(x = raw_file, start = 1, stop = 2) == "--") %>%
function_that_returns_the_index_of_all_TRUES %>%
function_that_picks_out_the_minimum_value
L <-
(substr(x = raw_file, start = 1, stop = 2) == "--") %>%
function_that_returns_the_index_of_all_TRUES
L <-
(substr(x = raw_file, start = 1, stop = 2)) %>%
which(.=="--") %>%
min()
L <-
(substr(x = raw_file, start = 1, stop = 2)) %>%
which(. == "--") %>%
min()
L <- raw_file %>%
(substr(x = raw_file, start = 1, stop = 2) == "--") %>%
which(. == "--") %>%
min()
# out the question marks and the missing function names:
L <- raw_file %>%
(substr(x = raw_file, start = 1, stop = 2)) %>%
which(. == "--") %>%
min()
L <- raw_file %>%
(substr(x = raw_file, start = 1, stop = 2)) %>%
which(. == "--") %>%
min()
my_vector <- c(10, 5, 8, 12, 5, 6)
# Use 'which' to find the indices where the elements are greater than 7
indices <- which(my_vector > 7)
# Print the indices
print(indices)
L <- raw_file %>%
(substr(x = raw_file, start = 1, stop = 2)) %>%
which(. == "--") %>%
min()
L <-
(substr(x = raw_file, start = 1, stop = 2)) %>%
which(rawfile,. == "--") %>%
min()
L <- min(which(substr(raw_file, start = 1, stop = 2) == "--"))
L
substr(x = raw_file, start = 1, stop = 2)
L <-
(substr(x = raw_file, start = 1, stop = 2) == "--") %>%
which() %>%
min()
L <-
(substr(x = raw_file, start = 1, stop = 2) == "--") %>%
which() %>%
min()
L <-
(substr(x = raw_file, start = 1, stop = 2) == "--") %>%
which() %>%
min()
L
raw_file <- readLines("http://www.sao.ru/lv/lvgdb/article/suites_dw_Table1.txt")
substr(x = raw_file, start = 1, stop = 2)
L <-
(substr(x = raw_file, start = 1, stop = 2) == "--") %>%
which() %>%
min()
L
cat(raw_file[1:(L-2)], sep = "\n", file = "Description_of_variables.txt")
variable_names <-
str_split(string = raw_file [L-1], pattern = "\\|") %>%
unlist() %>%
str_trim()
variable_names
comma_separated_values <-
raw_file[-(1:(L-1))] %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
comma_separated_values
comma_separated_values_with_names <-
c(paste(variable_names, collapse = ","),
comma_separated_values)
comma_separated_values_with_names
cat(raw_file[-(1:(L-2))], sep = "\n", file = "galaxies.csv")
comma_separated_values <-
raw_file[-(1:(L-1))] %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
comma_separated_values
comma_separated_values_with_names <-
c(paste(variable_names, collapse = ","),
comma_separated_values)
cat(comma_separated_values_with_names, sep = "\n", file = "galaxies.csv")
galaxies <- read_csv("galaxies.csv")
galaxies
comma_separated_values <-
raw_file[-(1:(L))] %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
comma_separated_values_with_names <-
c(paste(variable_names, collapse = ","),
comma_separated_values)
cat(comma_separated_values_with_names, sep = "\n", file = "galaxies.csv")
debugSource("~/Documents/GitHub/git-SofiaLangs/galaxy_skeleton2.R")
comma_separated_values <-
raw_file[-(1:(L))] %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
library(tidyverse)    # Contains most of what we need.
raw_file <- readLines("http://www.sao.ru/lv/lvgdb/article/suites_dw_Table1.txt")
substr(x = raw_file, start = 1, stop = 2)
cat(raw_file[1:(L-2)], sep = "\n", file = "Description_of_variables.txt")
variable_names <-
str_split(string = raw_file [L-1], pattern = "\\|") %>%
unlist() %>%
str_trim()
comma_separated_values <-
raw_file[-(1:(L))] %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
comma_separated_values_with_names <-
c(paste(variable_names, collapse = ","),
comma_separated_values)
galaxies <- read_csv("galaxies.csv")
